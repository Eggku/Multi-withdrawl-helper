name: Automate Build and Package Python App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # 如果是 Windows 相关问题，请改为 'windows-latest'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.5'

      - name: Create Virtual Environment and Install Dependencies
        run: |
          set -x  # 启用命令调试
          echo "正在创建虚拟环境..."
          python -m venv venv
          source venv/bin/activate  # 在 Ubuntu 上激活虚拟环境
          echo "正在安装依赖..."
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          echo "依赖安装完成。列出已安装包："
          pip list
          if [ $? -ne 0 ]; then echo "错误：依赖安装失败！"; exit 1; fi  # 检查安装是否成功

      - name: Build and Package Application
        run: |
          set -x
          echo "激活虚拟环境..."
          source venv/bin/activate
          echo "开始运行 build.py..."
          python build.py || { echo "错误：build.py 执行失败！"; exit 1; }  # 如果失败，输出错误并停止
          echo "构建过程完成。"

      - name: Debug Output Directory
        run: |
          set -x
          echo "检查 dist_packages/ 目录..."
          if [ -d "dist_packages/" ]; then
            ls -la dist_packages/
            echo "目录存在且包含文件。"
          else
            echo "错误：dist_packages/ 目录不存在！"
            exit 1
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: packaged-app
          path: dist_packages/
          if-no-files-found: error
